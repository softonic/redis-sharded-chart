apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redis-sharded.fullname" . }}
  labels:
    {{- include "redis-sharded.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "redis-sharded.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "redis-sharded.fullname" . }}-backend
  replicas: {{ .Values.replicaCount }}
  updateStrategy:
    type: {{ .Values.updateStrategy.type }}
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  template:
    metadata:
      labels:
        {{- include "redis-sharded.selectorLabels" . | nindent 8 }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
{{- if and .Values.prometheus.enabled .Values.prometheus.podLabels }}
{{ toYaml .Values.prometheus.podLabels | indent 8 }}
{{- end }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
      {{- if and .Values.prometheus.enabled .Values.prometheus.podAnnotations }}
{{ toYaml .Values.prometheus.podAnnotations | indent 8 }}
      {{- end }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "redis-sharded.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- with .Values.priorityClassName }}
      priorityClassName: "{{ . }}"
    {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
      - name: {{ include "redis-sharded.fullname" . }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - redis-server
        - /etc/redis/redis.conf
        env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: REDIS_PORT
          value: {{ .Values.redisPort | quote }}
        ports:
        - name: redis
          containerPort: {{ .Values.redisPort }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: redis-data
          mountPath: {{ .Values.persistence.path }}
          subPath: {{ .Values.persistence.subPath }}
        - name: config
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
{{- if .Values.prometheus.enabled }}
      - name: metrics
        image: "{{ .Values.prometheus.image.repository }}:{{ .Values.prometheus.image.tag }}"
        imagePullPolicy: {{ .Values.prometheus.image.pullPolicy | quote }}
        env:
        - name: REDIS_ALIAS
          value: {{ include "redis-sharded.fullname" . }}
        ports:
        - name: metrics
          containerPort: {{ .Values.prometheus.port }}
        resources:
{{ toYaml .Values.prometheus.resources | indent 10 }}
{{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "redis-sharded.fullname" . }}
      {{- if not .Values.persistence.enabled }}
      - name: "redis-data"
        emptyDir: {}
      {{- else }}
      {{- if .Values.persistence.existingClaim }}
      - name: "redis-data"
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- end }}
      {{- end }}
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          {{- include "redis-sharded.labels" . | nindent 10 }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- with .Values.persistence.storageClass }}
        storageClassName: {{ . }}
        {{- end }}
        selector:
        {{- if .Values.persistence.matchLabels }}
          matchLabels:
{{ toYaml .Values.persistence.matchLabels | indent 12 }}
        {{- end -}}
        {{- if .Values.persistence.matchExpressions }}
          matchExpressions:
{{ toYaml .Values.persistence.matchExpressions | indent 12 }}
        {{- end -}}
  {{- end }}
